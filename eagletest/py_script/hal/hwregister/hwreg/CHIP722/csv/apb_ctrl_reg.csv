 Address ; RegName ; Clk ; Rst ; Port ; Public ; Signal ; BitPos ; Default ; SW(R/W) ; HW(W) ; MCU(W) ; MISC ; Description 
0x000;APB_CTRL_SYSCLK_CONF; clk ; reset_n ;;;; [31:16] ; 16'h0 ; RO   ;;;;
;;;;;;apb_ctrl_soc_clk_sel; [15:14]; 2'd0; R/W ;;;;
;;;;;; ; [13]; 1'b0; RO ;;;;
;;;;;;apb_ctrl_rst_tick_cnt; [12]; 1'b0; R/W ;;;;
;;;;Not;;reg_clk_en; [11]; 1'b0; R/W ;;;;
;;;;;;apb_ctrl_clk_320m_en ; [10] ; 1'b0; R/W ;;;;
;;;;;;apb_ctrl_pre_div_cnt; [9:0]; 10'h0; R/W ;;;;
0x004;APB_CTRL_TICK_CONF; clk ; reset_n ;;;; [31:17]; 15'd0; RO   ;;;;
;;;;;;apb_ctrl_tick_enable; [16]; 1'd1; R/W ;;;;
;;;;;;apb_ctrl_ck8m_tick_num; [15:8]; 8'd7; R/W ;;;;
;;;;;;apb_ctrl_xtal_tick_num; [7:0]; 8'd39; R/W ;;;;
0x008;APB_SARADC_CTRL; clk ; reset_n ;;;; [31:29]; 3'd0; RO   ;;;;
;;;;;;reg_saradc_xpd_sar_force; [28:27]; 2'd0; R/W ;;;;force option to xpd sar blocks
;;;;;;reg_saradc_data_to_i2s; [26]; 1'b0; R/W ;;;;1: I2S input data is from SAR ADC (for DMA), 0: I2S input data is from GPIO matrix  
;;;;;;reg_saradc_data_sar_sel; [25]; 1'b0; R/W ;;;;1: sar_sel will be coded by the MSB of the 16-bit output data, in this case the resolution should not be larger than 11 bits.
;;;;;;reg_saradc_sar2_patt_p_clear; [24]; 1'd0; R/W ;;;;clear the pointer of pattern table for DIG ADC2 CTRL
;;;;;;reg_saradc_sar1_patt_p_clear; [23]; 1'd0; R/W ;;;;clear the pointer of pattern table for DIG ADC1 CTRL
;;;;;;reg_saradc_sar2_patt_len; [22:19]; 4'd15; R/W ;;;; 0 ~ 15 means length 1 ~ 16
;;;;;;reg_saradc_sar1_patt_len; [18:15]; 4'd15; R/W ;;;; 0 ~ 15 means length 1 ~ 16
;;;;;;reg_saradc_sar_clk_div; [14:7]; 8'd4; R/W ;;;;SAR clock divider
;;;;;1'b1;reg_saradc_sar_clk_gated; [6]; 1'b1; R/W ;;;;
;;;;;;reg_saradc_sar_sel; [5]; 1'd0; R/W ;;;; 0: SAR1, 1: SAR2, only work for single SAR mode
;;;;;;reg_saradc_work_mode; [4:3]; 2'd0; R/W ;;;; 0: single mode, 1: double mode, 2: alternate mode
;;;;;;; [2];;;;;;
;;;;;1'b0;reg_saradc_start; [1]; 1'd0; R/W ;;;;
;;;;;1'b0;reg_saradc_start_force; [0]; 1'd0; R/W ;;;;
0x00C;APB_SARADC_CTRL2; clk ; reset_n ;;;; [31:21]; 21'd0; RO   ;;;;
;;;;;;reg_saradc_timer_en; [20]; 1'd0; R/W ;;;;to enable saradc timer trigger
;;;;;;reg_saradc_timer_target; [19:12]; 8'd10; R/W ;;;;to set saradc timer target
;;;;;;reg_saradc_timer_sel; [11]; 1'd0; R/W ;;;;1: select saradc timer 0: i2s_ws trigger
;;;;;;reg_saradc_sar2_inv; [10]; 1'd0; R/W ;;;;1: data to DIG ADC2 CTRL is inverted, otherwise not
;;;;;;reg_saradc_sar1_inv; [9]; 1'd0; R/W ;;;;1: data to DIG ADC1 CTRL is inverted, otherwise not
;;;;;;reg_saradc_max_meas_num; [8:1]; 8'd255; R/W ;;;;max conversion number
;;;;;1'b1;reg_saradc_meas_num_limit; [0]; 1'd0; R/W ;;;;
0x010;APB_SARADC_FSM; clk ; reset_n ;;;reg_saradc_sample_cycle; [31:24]; 8'd2; R/W   ;;;;sample cycles
;;;;;;reg_saradc_sample_num; [23:16]; 8'd0; R/W   ;;;;sample number
;;;;;;; [15:0]; 16'd0; RO   ;;;;
0x014;APB_SARADC_FSM_WAIT; clk ; reset_n ;;;; [31:24]; 8'd0; RO   ;;;;
;;;;;N/A;reg_saradc_standby_wait; [23:16]; 8'd255; R/W ;;;;
;;;;;N/A;reg_saradc_rstb_wait; [15:8]; 8'd8; R/W ;;;;
;;;;;N/A;reg_saradc_xpd_wait; [7:0]; 8'd8; R/W ;;;;
0x018;APB_SARADC_SAR1_STATUS; clk ; reset_n ;;N/A;reg_saradc_sar1_status; [31:0]; 32'd0; RO   ;;;;
0x01C;APB_SARADC_SAR2_STATUS; clk ; reset_n ;;N/A;reg_saradc_sar2_status; [31:0]; 32'd0; RO   ;;;;
0x020;APB_SARADC_SAR1_PATT_TAB1; clk ; reset_n ;;;reg_saradc_sar1_patt_tab1; [31:0]; 32'hf0f0f0f; R/W   ;;;;item 0 ~ 3 for pattern table 1 (each item one byte)
0x024;APB_SARADC_SAR1_PATT_TAB2; clk ; reset_n ;;;reg_saradc_sar1_patt_tab2; [31:0]; 32'hf0f0f0f; R/W   ;;;;Item 4 ~ 7 for pattern table 1 (each item one byte)
0x028;APB_SARADC_SAR1_PATT_TAB3; clk ; reset_n ;;;reg_saradc_sar1_patt_tab3; [31:0]; 32'hf0f0f0f; R/W   ;;;;Item 8 ~ 11 for pattern table 1 (each item one byte)
0x02C;APB_SARADC_SAR1_PATT_TAB4; clk ; reset_n ;;;reg_saradc_sar1_patt_tab4; [31:0]; 32'hf0f0f0f; R/W   ;;;;Item 12 ~ 15 for pattern table 1 (each item one byte)
0x030;APB_SARADC_SAR2_PATT_TAB1; clk ; reset_n ;;;reg_saradc_sar2_patt_tab1; [31:0]; 32'hf0f0f0f; R/W   ;;;;item 0 ~ 3 for pattern table 2 (each item one byte)
0x034;APB_SARADC_SAR2_PATT_TAB2; clk ; reset_n ;;;reg_saradc_sar2_patt_tab2; [31:0]; 32'hf0f0f0f; R/W   ;;;;Item 4 ~ 7 for pattern table 2 (each item one byte)
0x038;APB_SARADC_SAR2_PATT_TAB3; clk ; reset_n ;;;reg_saradc_sar2_patt_tab3; [31:0]; 32'hf0f0f0f; R/W   ;;;;Item 8 ~ 11 for pattern table 2 (each item one byte)
0x03C;APB_SARADC_SAR2_PATT_TAB4; clk ; reset_n ;;;reg_saradc_sar2_patt_tab4; [31:0]; 32'hf0f0f0f; R/W   ;;;;Item 12 ~ 15 for pattern table 2 (each item one byte)
0x040;APB_ADC_ARB_CTRL; clk ; reset_n ;;;; [31:13];;;;;;
;;;;;;reg_adc_arb_fix_priority; [12];1'b0; R/W   ;;;;adc2 arbiter uses fixed priority
;;;;;;reg_adc_arb_wifi_priority; [11:10];2'd2; R/W   ;;;;Set adc2 arbiter wifi priority
;;;;;;reg_adc_arb_rtc_priority; [9:8];2'd1; R/W   ;;;;Set adc2 arbiter rtc priority
;;;;;;reg_adc_arb_apb_priority; [7:6];2'd0; R/W   ;;;;Set adc2 arbiterapb priority
;;;;;;reg_adc_arb_grant_force; [5];1'b0; R/W   ;;;;adc2 arbiter force grant
;;;;;;reg_adc_arb_wifi_force; [4];1'b0; R/W   ;;;;adc2 arbiter force to enable wifi controller
;;;;;;reg_adc_arb_rtc_force; [3];1'b0; R/W   ;;;;adc2 arbiter force to enable rtc controller
;;;;;;reg_adc_arb_apb_force; [2];1'b0; R/W   ;;;;adc2 arbiter force to enableapb controller
;;;;;;; [1:0];;;;;;
0x044;APB_CTRL_CLK_OUT_EN; clk ; reset_n ;;;; [31:11];21'd0; RO   ;;;;
;;;;;;reg_clk_xtal_oen; [10];1'b1; R/W ;;;;
;;;;;;reg_clk40x_bb_oen; [9];1'b1; R/W ;;;;
;;;;;;reg_clk_dac_cpu_oen; [8];1'b1; R/W ;;;;
;;;;;;reg_clk_adc_inf_oen; [7];1'b1; R/W ;;;;
;;;;;;reg_clk_320m_oen; [6];1'b1; R/W ;;;;
;;;;;;reg_clk160_oen; [5];1'b1; R/W ;;;;
;;;;;;reg_clk80_oen; [4];1'b1; R/W ;;;;
;;;;;;reg_clk_bb_oen; [3];1'b1; R/W ;;;;
;;;;;;reg_clk44_oen; [2];1'b1; R/W ;;;;
;;;;;;reg_clk22_oen; [1];1'b1; R/W ;;;;
;;;;;;reg_clk20_oen; [0];1'b1; R/W ;;;;
0x048;HOST_INF_SEL; clk ; reset_n ;;;;[31:14];18'h0;RO;;;;
;;;;;;spi_prior;[13];1'b0;R/W;;;;
;;;;;;;[12:10];3'b0;RO;;;;
;;;;;;spi1_hold;[9];1'b0;R/W;;;;
;;;;;;spi0_hold;[8];1'b0;R/W;;;;
;;;;;;peri_io_swap;[7:0];8'h0;R/W;;;;
0x04C;EXT_MEM_PMS_LOCK; clk ;po_reset_n;;;;[31:1];31'h0;RO;;;;
;;;; Not ;;ext_mem_pms_lock;[0];1'b0;R/W;ext_mem_pms_lock/lock;;;
0x050;FLASH_ACE0_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;flash_ace0_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x054;FLASH_ACE1_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;flash_ace1_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x058;FLASH_ACE2_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;flash_ace2_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x05C;FLASH_ACE3_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;flash_ace3_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x060;FLASH_ACE0_ADDR; clk ;po_reset_n;;;flash_ace0_addr_s;[31:0]    ;32'h0;R/W;ext_mem_pms_lock/lock;;;
0x064;FLASH_ACE1_ADDR; clk ;po_reset_n;;;flash_ace1_addr_s;[31:0]    ;32'h10000000;R/W;ext_mem_pms_lock/lock;;;
0x068;FLASH_ACE2_ADDR; clk ;po_reset_n;;;flash_ace2_addr_s;[31:0]    ;32'h20000000;R/W;ext_mem_pms_lock/lock;;;
0x06C;FLASH_ACE3_ADDR; clk ;po_reset_n;;;flash_ace3_addr_s;[31:0]    ;32'h30000000;R/W;ext_mem_pms_lock/lock;;;
0x070;FLASH_ACE0_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;flash_ace0_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x074;FLASH_ACE1_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;flash_ace1_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x078;FLASH_ACE2_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;flash_ace2_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x07C;FLASH_ACE3_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;flash_ace3_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x080;SRAM_ACE0_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;sram_ace0_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x084;SRAM_ACE1_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;sram_ace1_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x088;SRAM_ACE2_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;sram_ace2_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x08C;SRAM_ACE3_ATTR; clk ;po_reset_n;;;;[31:3];29'h0;RO;;;;
;;;;;;sram_ace3_attr;[2:0]     ;3'h7;R/W;ext_mem_pms_lock/lock;;;
0x090;SRAM_ACE0_ADDR; clk ;po_reset_n;;;sram_ace0_addr_s;[31:0];32'h0;R/W;ext_mem_pms_lock/lock;;;
0x094;SRAM_ACE1_ADDR; clk ;po_reset_n;;;sram_ace1_addr_s;[31:0];32'h10000000;R/W;ext_mem_pms_lock/lock;;;
0x098;SRAM_ACE2_ADDR; clk ;po_reset_n;;;sram_ace2_addr_s;[31:0];32'h20000000;R/W;ext_mem_pms_lock/lock;;;
0x09C;SRAM_ACE3_ADDR; clk ;po_reset_n;;;sram_ace3_addr_s;[31:0];32'h30000000;R/W;ext_mem_pms_lock/lock;;;
0x0A0;SRAM_ACE0_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;sram_ace0_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x0A4;SRAM_ACE1_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;sram_ace1_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x0A8;SRAM_ACE2_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;sram_ace2_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x0AC;SRAM_ACE3_SIZE; clk ;po_reset_n;;;;[31:16];16'h0;RO;;;;
;;;;;;sram_ace3_size;[15:0]    ;16'h1000;R/W;ext_mem_pms_lock/lock;;;
0x0B0;SPI0_PMS_CTRL; clk ; reset_n ;;;;[31:7];25'h0;RO;;;;
;;;;;;spi0_reject_cde;[6:2];5'h0;RO;;;;
;;;;;;spi0_reject_clr;[1];1'b0;WOD;;;;
;;;;;;spi0_reject_int;[0];1'b0;RO;;;;
0x0B4;SPI0_REJECT_ADDR; clk ; reset_n ;;;spi0_reject_addr;[31:0];32'h0;RO;;;;
0x0B8;SPI1_PMS_CTRL; clk ; reset_n ;;;;[31:7];25'h0;RO;;;;
;;;;;;spi1_reject_cde;[6:2];5'h0;RO;;;;
;;;;;;spi1_reject_clr;[1];1'b0;WOD;;;;
;;;;;;spi1_reject_int;[0];1'b0;RO;;;;
0x0BC;SPI1_REJECT_ADDR; clk ; reset_n ;;;spi1_reject_addr;[31:0];32'h0;RO;;;;
0x0C0;APB_CTRL_SDIO_CTRL; clk ; reset_n ;;;;[31:1];31'h0;RO;;;;
;;;;;;reg_sdio_win_access_en;[0];1'h0;R/W ;;;;
0x0C4;REDCY_SIG0_REG; clk ; reset_n ;;;redcy_andor;[31];1'h0;RO;;;;
;;;;;;redcy_sig0;[30:0];31'h0;R/W ;;;;
0x0C8;REDCY_SIG1_REG; clk ; reset_n ;;;redcy_nandor;[31];1'h0;RO;;;;
;;;;;;redcy_sig1;[30:0];31'h0;R/W ;;;;
0x0CC;WIFI_BB_CFG;clk;reset_n;;;reg_wifi_bb_cfg;[31:0];32'h0;R/W;;;;
0x0D0;WIFI_BB_CFG_2;clk;reset_n;;;reg_wifi_bb_cfg_2;[31:0];32'h0;R/W;;;;
0x0D4;WIFI_CLK_EN;clk;reset_n;;;reg_wifi_clk_en;[31:0];32'hfffce030;R/W;;;;
0x0D8;WIFI_RST_EN;clk;reset_n;;;reg_wifi_rst;[31:0];32'h0;R/W;;;;
0x0DC;FRONT_END_MEM_PD;clk;reset_n;;;;[31:6];26'b0;RO;;;;
;;;;;;reg_dc_mem_force_pd;[5];1'b0;R/W;;;;
;;;;;;reg_dc_mem_force_pu;[4];1'b1;R/W;;;;
;;;;;;reg_pbus_mem_force_pd;[3];1'b0;R/W;;;;
;;;;;;reg_pbus_mem_force_pu;[2];1'b1;R/W;;;;
;;;;;;reg_agc_mem_force_pd;[1];1'b0;R/W;;;;
;;;;;;reg_agc_mem_force_pu;[0];1'b1;R/W;;;;
0x3FC;APB_CTRL_DATE; clk ; reset_n ; Not ;;apb_ctrl_date ;[31:0] ;32'h18102500;R/W ;;;;
