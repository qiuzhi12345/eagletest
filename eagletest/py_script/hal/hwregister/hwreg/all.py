class HWREG(object):
    def __init__(self, channel, chipv = "ESP32"):
        self.chipv = chipv
        self.channel = channel
        if self.chipv == "CHIP72":
            from hal.hwregister.hwreg.CHIP72 import *
            self.GPIO_SD = GPIO_SD.GPIO_SD(channel, chipv)
            self.RTC_CNTL = RTC_CNTL.RTC_CNTL(channel, chipv)
            self.EFUSE = EFUSE.EFUSE(channel, chipv)
            self.SARADC = SARADC.SARADC(channel, chipv)
            self.UART = UART.UART(channel, chipv)
            self.GPIO = GPIO.GPIO(channel, chipv)
            self.RTC_IO = RTC_IO.RTC_IO(channel, chipv)
        if self.chipv == "FPGA11ac":
            from hal.hwregister.hwreg.FPGA11ac import *
            self.MAC_TX = MAC_TX.MAC_TX(channel, chipv)
            self.MAC_SCH = MAC_SCH.MAC_SCH(channel, chipv)
            self.MAC_PWR = MAC_PWR.MAC_PWR(channel, chipv)
            self.MAC_TXQMEM = MAC_TXQMEM.MAC_TXQMEM(channel, chipv)
            self.MAC_SEC = MAC_SEC.MAC_SEC(channel, chipv)
            self.MAC_RX = MAC_RX.MAC_RX(channel, chipv)
        if self.chipv == "FPGA722":
            from hal.hwregister.hwreg.FPGA722 import *
            self.MAC_TX = MAC_TX.MAC_TX(channel, chipv)
            self.NRX = NRX.NRX(channel, chipv)
            self.MAC_SCH = MAC_SCH.MAC_SCH(channel, chipv)
            self.MAC_PWR = MAC_PWR.MAC_PWR(channel, chipv)
            self.MAC_TXQMEM = MAC_TXQMEM.MAC_TXQMEM(channel, chipv)
            self.MAC_SEC = MAC_SEC.MAC_SEC(channel, chipv)
            self.MAC_RX = MAC_RX.MAC_RX(channel, chipv)
        if self.chipv == "ESP32":
            from hal.hwregister.hwreg.ESP32 import *
            self.GPIO = GPIO.GPIO(channel, chipv)
            self.GPIO_SD = GPIO_SD.GPIO_SD(channel, chipv)
            self.MAC_TX = MAC_TX.MAC_TX(channel, chipv)
            self.RTC_CNTL = RTC_CNTL.RTC_CNTL(channel, chipv)
            self.FE = FE.FE(channel, chipv)
            self.DPORT = DPORT.DPORT(channel, chipv)
            self.FE2 = FE2.FE2(channel, chipv)
            self.EFUSE = EFUSE.EFUSE(channel, chipv)
            self.SARADC = SARADC.SARADC(channel, chipv)
            self.MAC_SCH = MAC_SCH.MAC_SCH(channel, chipv)
            self.MAC_PWR = MAC_PWR.MAC_PWR(channel, chipv)
            self.MAC_TXQMEM = MAC_TXQMEM.MAC_TXQMEM(channel, chipv)
            self.MAC_SEC = MAC_SEC.MAC_SEC(channel, chipv)
            self.RTC_IO = RTC_IO.RTC_IO(channel, chipv)
            self.APB_CTRL = APB_CTRL.APB_CTRL(channel, chipv)
            self.MAC_RX = MAC_RX.MAC_RX(channel, chipv)
        if self.chipv == "CHIP722":
            from hal.hwregister.hwreg.CHIP722 import *
            self.MAC_TX = MAC_TX.MAC_TX(channel, chipv)
            self.RTC_CNTL = RTC_CNTL.RTC_CNTL(channel, chipv)
            self.SARADC = SARADC.SARADC(channel, chipv)
            self.MAC_SCH = MAC_SCH.MAC_SCH(channel, chipv)
            self.MAC_PWR = MAC_PWR.MAC_PWR(channel, chipv)
            self.EFUSE = EFUSE.EFUSE(channel, chipv)
            self.MAC_TXQMEM = MAC_TXQMEM.MAC_TXQMEM(channel, chipv)
            self.MAC_SEC = MAC_SEC.MAC_SEC(channel, chipv)
            self.RTC_IO = RTC_IO.RTC_IO(channel, chipv)
            self.APB_CTRL = APB_CTRL.APB_CTRL(channel, chipv)
            self.MAC_RX = MAC_RX.MAC_RX(channel, chipv)
            self.I2S = I2S.I2S(channel, chipv)
            self.SYSTEM = SYSTEM.SYSTEM(channel, chipv)
            self.TIMERS = TIMERS.TIMERS(channel, chipv)
        if self.chipv == "FPGA723":
            from hal.hwregister.hwreg.FPGA723 import *
            self.AGC = AGC.AGC(channel, chipv)
            self.BB = BB.BB(channel, chipv)
            self.BB_TX = BB_TX.BB_TX(channel, chipv)
            self.BRX = BRX.BRX(channel, chipv)
            self.MAC_PWR = MAC_PWR.MAC_PWR(channel, chipv)
            self.MAC_RX = MAC_RX.MAC_RX(channel, chipv)
            self.MAC_SCH = MAC_SCH.MAC_SCH(channel, chipv)
            self.MAC_SEC = MAC_SEC.MAC_SEC(channel, chipv)
            self.MAC_TXQMEM = MAC_TXQMEM.MAC_TXQMEM(channel, chipv)
            self.MAC_TX = MAC_TX.MAC_TX(channel, chipv)
            self.NRX = NRX.NRX(channel, chipv)
        if self.chipv == "CHIP723":
            from hal.hwregister.hwreg.CHIP723 import *
            self.RTC_CNTL = RTC_CNTL.RTC_CNTL(channel, chipv)
            self.TIMERS = TIMERS.TIMERS(channel, chipv)
            self.RTC_IO = RTC_IO.RTC_IO(channel, chipv)
            self.SARADC = SARADC.SARADC(channel, chipv)
            self.APB_CTRL = APB_CTRL.APB_CTRL(channel, chipv)
            self.SYSTEM = SYSTEM.SYSTEM(channel, chipv)
            self.RTC = RTC.RTC(channel, chipv)
            self.EFUSE = EFUSE.EFUSE(channel, chipv)
            self.I2S = I2S.I2S(channel, chipv)
        if self.chipv == "FPGA724":
            from hal.hwregister.hwreg.FPGA724 import *
            self.AGC = AGC.AGC(channel, chipv)
            self.BB = BB.BB(channel, chipv)
            self.BB_TX = BB_TX.BB_TX(channel, chipv)
            self.BRX = BRX.BRX(channel, chipv)
            self.MAC_PWR = MAC_PWR.MAC_PWR(channel, chipv)
            self.MAC_RX = MAC_RX.MAC_RX(channel, chipv)
            self.MAC_SCH = MAC_SCH.MAC_SCH(channel, chipv)
            self.MAC_SEC = MAC_SEC.MAC_SEC(channel, chipv)
            self.MAC_TXQMEM = MAC_TXQMEM.MAC_TXQMEM(channel, chipv)
            self.MAC_TX = MAC_TX.MAC_TX(channel, chipv)
            self.NRX = NRX.NRX(channel, chipv)
        if self.chipv == "FPGA724_M1":
            from hal.hwregister.hwreg.FPGA724_M1 import *
            self.AGC = AGC.AGC(channel, chipv)
            self.BB = BB.BB(channel, chipv)
            self.BB_TX = BB_TX.BB_TX(channel, chipv)
            self.BRX = BRX.BRX(channel, chipv)
            self.MAC_PWR = MAC_PWR.MAC_PWR(channel, chipv)
            self.MAC_RX = MAC_RX.MAC_RX(channel, chipv)
            self.MAC_SCH = MAC_SCH.MAC_SCH(channel, chipv)
            self.MAC_SEC = MAC_SEC.MAC_SEC(channel, chipv)
            self.MAC_TXQMEM = MAC_TXQMEM.MAC_TXQMEM(channel, chipv)
            self.MAC_TX = MAC_TX.MAC_TX(channel, chipv)
            self.NRX = NRX.NRX(channel, chipv)
