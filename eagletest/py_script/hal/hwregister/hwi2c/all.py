class HWI2C(object):
    def __init__(self, channel, chipv = "ESP32"):
        self.chipv = chipv
        self.channel = channel
        if self.chipv == "CHIP72":
            from hal.hwregister.hwi2c.CHIP72 import *
            self.bias = BIAS.BIAS(channel, chipv)
            self.bbpll = BBPLL.BBPLL(channel, chipv)
            self.rftx = RFTX.RFTX(channel, chipv)
            self.rfrx = RFRX.RFRX(channel, chipv)
            self.bbtop = BBTOP.BBTOP(channel, chipv)
            self.saradc = SARADC.SARADC(channel, chipv)
            self.ckgen = CKGEN.CKGEN(channel, chipv)
            self.xtal = XTAL.XTAL(channel, chipv)
            self.rfpll = RFPLL.RFPLL(channel, chipv)
            self.rfpll_sdm = RFPLL_SDM.RFPLL_SDM(channel, chipv)
            self.dig_fe = DIG_FE.DIG_FE(channel, chipv)
            self.dig_ana = DIG_ANA.DIG_ANA(channel, chipv)
            self.dig_test = DIG_TEST.DIG_TEST(channel, chipv)
            self.apll = APLL.APLL(channel, chipv)
        if self.chipv == "CHIP722":
            from hal.hwregister.hwi2c.CHIP722 import *
            self.bias = BIAS.BIAS(channel, chipv)
            self.bbpll = BBPLL.BBPLL(channel, chipv)
            self.rftx = RFTX.RFTX(channel, chipv)
            self.rfrx = RFRX.RFRX(channel, chipv)
            self.bbtop = BBTOP.BBTOP(channel, chipv)
            self.ckgen = CKGEN.CKGEN(channel, chipv)
            self.xtal = XTAL.XTAL(channel, chipv)
            self.rfpll = RFPLL.RFPLL(channel, chipv)
            self.rfpll_sdm = RFPLL_SDM.RFPLL_SDM(channel, chipv)
            self.apll = APLL.APLL(channel, chipv)
            self.ulp = ULP.ULP(channel, chipv)
            self.bias_marlin3 = BIAS_MARLIN3.BIAS_MARLIN3(channel, chipv)
        if self.chipv == "CHIP723":
            from hal.hwregister.hwi2c.CHIP723 import *
            self.bias = BIAS.BIAS(channel, chipv)
            self.bbpll = BBPLL.BBPLL(channel, chipv)
            self.rftx = RFTX.RFTX(channel, chipv)
            self.rfrx = RFRX.RFRX(channel, chipv)
            self.bbtop = BBTOP.BBTOP(channel, chipv)
            self.ckgen = CKGEN.CKGEN(channel, chipv)
            self.rfpll = RFPLL.RFPLL(channel, chipv)
            self.rfpll_sdm = RFPLL_SDM.RFPLL_SDM(channel, chipv)
            self.apll = APLL.APLL(channel, chipv)
            self.ulp = ULP.ULP(channel, chipv)
            self.sar = SAR.SAR(channel, chipv)
        if self.chipv == "CHIP724":
            from hal.hwregister.hwi2c.CHIP724 import *
            self.bias = BIAS.BIAS(channel, chipv)
            self.bbpll = BBPLL.BBPLL(channel, chipv)
            self.rftx = RFTX.RFTX(channel, chipv)
            self.rfrx = RFRX.RFRX(channel, chipv)
            self.bbtop = BBTOP.BBTOP(channel, chipv)
            self.ckgen = CKGEN.CKGEN(channel, chipv)
            self.rfpll = RFPLL.RFPLL(channel, chipv)
            self.rfpll_sdm = RFPLL_SDM.RFPLL_SDM(channel, chipv)
            self.apll = APLL.APLL(channel, chipv)
            self.ulp = ULP.ULP(channel, chipv)
            self.sar = SAR.SAR(channel, chipv)
        if self.chipv == "ESP32":
            from hal.hwregister.hwi2c.ESP32 import *
            self.bias = BIAS.BIAS(channel, chipv)
            self.bbpll = BBPLL.BBPLL(channel, chipv)
            self.rftx = RFTX.RFTX(channel, chipv)
            self.rfrx = RFRX.RFRX(channel, chipv)
            self.bbtop = BBTOP.BBTOP(channel, chipv)
            self.saradc = SARADC.SARADC(channel, chipv)
            self.ckgen = CKGEN.CKGEN(channel, chipv)
            self.xtal = XTAL.XTAL(channel, chipv)
            self.rfpll = RFPLL.RFPLL(channel, chipv)
            self.rfpll_sdm = RFPLL_SDM.RFPLL_SDM(channel, chipv)
            self.dig_fe = DIG_FE.DIG_FE(channel, chipv)
            self.dig_ana = DIG_ANA.DIG_ANA(channel, chipv)
            self.dig_test = DIG_TEST.DIG_TEST(channel, chipv)
            self.apll = APLL.APLL(channel, chipv)
        if self.chipv == "ESP8266":
            from hal.hwregister.hwi2c.ESP8266 import *
            self.bias = BIAS.BIAS(channel, chipv)
            self.bbpll = BBPLL.BBPLL(channel, chipv)
            self.rftx = RFTX.RFTX(channel, chipv)
            self.rfrx = RFRX.RFRX(channel, chipv)
            self.bbtx = BBTX.BBTX(channel, chipv)
            self.bbrx = BBRX.BBRX(channel, chipv)
            self.saradc = SARADC.SARADC(channel, chipv)
            self.ckgen = CKGEN.CKGEN(channel, chipv)
            self.xtal = XTAL.XTAL(channel, chipv)
            self.rfpll = RFPLL.RFPLL(channel, chipv)
            self.rfpll_sdm = RFPLL_SDM.RFPLL_SDM(channel, chipv)
            self.dig_fe = DIG_FE.DIG_FE(channel, chipv)
            self.dig_inf = DIG_INF.DIG_INF(channel, chipv)
